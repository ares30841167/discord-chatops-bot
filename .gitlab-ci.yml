stages:
  - test
  - build
  - release

go-test:
  image: golang:1.18
  stage: test
  variables:
    GUILD_ID: "TEST ENV"
  tags:
    - areschen-server-1
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -v -race $(go list ./... | grep -v /vendor/)

docker-build-dev:
  image: docker:20.10.15
  stage: build
  tags:
    - areschen-server-1
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - tag=":$CI_COMMIT_REF_SLUG"
    - echo "Running on branch '$CI_COMMIT_BRANCH', build dev image:\ $CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH != "main"
      exists:
        - Dockerfile

docker-build-release:
  image: docker:20.10.15
  stage: release
  tags:
    - areschen-server-1
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - tag=":$CI_COMMIT_TAG"
    - echo "Release tag $CI_COMMIT_TAG has been created, build release image:\ $CI_REGISTRY_IMAGE${tag}"
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
  - if: $CI_COMMIT_TAG
    exists:
      - Dockerfile